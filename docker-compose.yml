
services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_SA_PASSWORD}
    volumes:
      - ./data-2022:/var/opt/mssql/data
      - ./log-2022:/var/opt/mssql/log
      - ./backup-2022:/var/opt/mssql/backup
      - ./init.sql:/usr/config/init.sql
    command: >
      /bin/bash -c "
        /opt/mssql/bin/sqlservr & 
        sleep 30s && 
        until /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P '${SQL_SA_PASSWORD}' -Q 'SELECT 1'; do sleep 5; done && 
        /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P '${SQL_SA_PASSWORD}' -i /usr/config/init.sql && 
        wait
      "
    restart: unless-stopped
    mem_limit: 4g
    mem_reservation: 2g
    cpus: 2
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P '${SQL_SA_PASSWORD}' -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    networks:
      - app-network

  web:
    build:
      context: ./.
      dockerfile: BackendWebService.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=Sal7ly;User Id=sa;Password=${SQL_SA_PASSWORD};Encrypt=false
    volumes:
      - ./data-protection-keys:/home/app/.aspnet/DataProtection-Keys
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge